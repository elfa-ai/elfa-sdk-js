name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript type check
        run: npm run typecheck
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run tests
        run: npm test
        
      - name: Run build
        run: npm run build
        
      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build package
        run: npm run build
        
      - name: Run integration tests
        env:
          ELFA_API_KEY: ${{ secrets.ELFA_API_KEY }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        run: |
          cd temp-test
          npm install
          npm run test-basic
          npm run test-v1-compat
        continue-on-error: true # Don't fail CI if API keys not available

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Run dependency check
        run: npx depcheck --ignores="@types/*,eslint*,jest*,typescript,tsup"

  publish-check:
    name: Publish Readiness
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check package.json
        run: |
          # Verify required fields for npm publish
          node -e "
            const pkg = require('./package.json');
            const required = ['name', 'version', 'description', 'main', 'types', 'repository', 'license'];
            const missing = required.filter(field => !pkg[field]);
            if (missing.length > 0) {
              console.error('Missing required package.json fields:', missing);
              process.exit(1);
            }
            console.log('✅ Package.json validation passed');
          "
          
      - name: Verify build artifacts
        run: |
          npm run build
          # Check if all expected files are generated
          test -f dist/index.js || (echo "❌ Missing dist/index.js" && exit 1)
          test -f dist/index.mjs || (echo "❌ Missing dist/index.mjs" && exit 1)
          test -f dist/index.d.ts || (echo "❌ Missing dist/index.d.ts" && exit 1)
          test -f dist/index.d.mts || (echo "❌ Missing dist/index.d.mts" && exit 1)
          echo "✅ All build artifacts present"
          
      - name: Test package installation
        run: |
          # Test npm pack
          npm pack
          # Verify tarball contents
          tar -tzf *.tgz | grep -E "(dist/|package\.json|README\.md|docs/)" || (echo "❌ Missing files in package" && exit 1)
          echo "✅ Package contents verified"
          
      - name: Dry run publish
        run: npm publish --dry-run